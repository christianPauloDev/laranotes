{"version":3,"sources":["services/api.js","services/url.js","App.jsx","reportWebVitals.js","index.js"],"names":["api","axios","create","baseURL","App","useState","categories","setCategories","fetchCategories","a","get","data","useEffect","showModalCategory","setShowModalCategory","handleModalCategory","title","period","formCategory","setFormCategory","handleFormCategory","event","target","name","value","showAlertWarningCategory","setShowAlertWarningCategory","spendings","setSpendings","fetchSpending","showModalSpend","setShowModalSpend","handleModalSpend","category_fk","description","total_spent","closing_date","formSpend","setFormSpend","handleFormSpend","showAlertWarningSpend","setShowAlertWarningSpend","category","filters","setFilters","filtered","setFiltered","handleFilter","alertWarning","motion","div","animate","y","className","formatDate","date","Date","getDate","getMonth","getFullYear","type","onClick","id","defaultChecked","onChange","selected","map","categorySelect","length","button","x","filteredFull","filter","filteredCategories","filteredPeriod","categorie","spending","Modal","show","onHide","htmlFor","categorySelectFK","placeholder","prefix","decimalSeparator","thousandSeparator","onChangeEvent","maskedvalue","floatvalue","setTimeout","post","then","response","status","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAOeA,E,OAJHC,EAAMC,OAAO,CACrBC,QCHU,8C,+BCiUCC,MA1Tf,WAAe,MAIuBC,mBAAS,IAJhC,mBAINC,EAJM,KAIMC,EAJN,cAMEC,IANF,2EAMb,8BAAAC,EAAA,sEACyBT,EAAIU,IAAJ,cADzB,gBACUC,EADV,EACUA,KACRJ,EAAcI,GAFhB,4CANa,sBAWbC,qBAAU,WACRJ,MACC,IAbU,MAgBqCH,oBAAS,GAhB9C,mBAgBNQ,EAhBM,KAgBaC,EAhBb,KAiBPC,EAAsB,kBAAMD,GAAsBD,IAjB3C,EAmB2BR,mBAAS,CAC/CW,MAAO,GACPC,OAAQ,KArBG,mBAmBNC,EAnBM,KAmBQC,EAnBR,KAuBPC,EAAqB,SAAAC,GAAK,OAAIF,EAAgB,2BAAKD,GAAN,kBAAqBG,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,UAvB5F,EA0BmDnB,oBAAS,GA1B5D,mBA0BNoB,EA1BM,KA0BoBC,EA1BpB,OA6CqBrB,mBAAS,IA7C9B,mBA6CNsB,EA7CM,KA6CKC,EA7CL,cAgDEC,IAhDF,2EAgDb,8BAAApB,EAAA,sEACyBT,EAAIU,IAAJ,YADzB,gBACUC,EADV,EACUA,KACRiB,EAAajB,GAFf,4CAhDa,sBAoDbC,qBAAU,WACRiB,MACC,IAtDU,MAyD+BxB,oBAAS,GAzDxC,mBAyDNyB,EAzDM,KAyDUC,EAzDV,KA0DPC,EAAmB,kBAAMD,GAAmBD,IA1DrC,EA6DqBzB,mBAAS,CACzC4B,YAAa,GACbC,YAAa,GACbC,YAAa,GACbC,aAAc,KAjEH,mBA6DNC,EA7DM,KA6DKC,EA7DL,KAqEPC,EAAkB,SAAAlB,GAAK,OAAIiB,EAAa,2BAAKD,GAAN,kBAAkBhB,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,UArEnF,EA2E6CnB,oBAAS,GA3EtD,mBA2ENmC,EA3EM,KA2EiBC,EA3EjB,OA8FiBpC,mBAAS,CACrCY,OAAQ,GACRyB,SAAU,KAhGC,mBA8FNC,EA9FM,KA8FGC,GA9FH,QAmGmBvC,mBAAS,IAnG5B,qBAmGNwC,GAnGM,MAmGIC,GAnGJ,MAqGPC,GAAe,SAAA1B,GACnBuB,GAAW,2BAAKD,GAAN,kBAAgBtB,EAAMC,OAAOC,KAAOF,EAAMC,OAAOE,UAgCvDwB,GAAe,WACnB,OAAO,eAACC,EAAA,EAAOC,IAAR,CAAYC,QAAS,CAAEC,EAAG,IAAMC,UAAU,sBAA1C,cAAiE,mBAAGA,UAAU,gCAA9E,mCAGHC,GAAa,SAAA9B,GACjB,IAAI+B,EAAO,IAAIC,KAAKhC,GAEpB,OADqB+B,EAAKE,UAAc,KAAQF,EAAKG,WAAa,GAAM,IAAMH,EAAKI,eAKrF,OACE,gCACE,qBAAKN,UAAU,6BAAf,SACE,qBAAKA,UAAU,YAAf,SACE,uBAAMA,UAAU,uBAAhB,cAAwC,mBAAGA,UAAU,wBAArD,oBAGJ,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,6BAAf,SACE,qBAAKA,UAAU,mCAAf,SACE,sBAAKA,UAAU,YAAf,UACE,yBAAQO,KAAK,SAASC,QAAS7B,EAAkBqB,UAAU,kBAA3D,UAA6E,mBAAGA,UAAU,2BAA1F,4BACA,yBAAQO,KAAK,SAASC,QAAS9C,EAAqBsC,UAAU,kBAA9D,UAAgF,mBAAGA,UAAU,kBAA7F,mCAIN,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,uBAAf,SACE,sBAAKA,UAAU,cAAf,UACE,sBAAMA,UAAU,sCAAsCS,GAAG,4BAAzD,yBACA,yBAAQC,eAAe,GAAGxC,KAAK,SAASC,MAAOmB,EAAQ1B,OAAQ+C,SAAUjB,GAAcM,UAAU,cAAjG,UACE,wBAAQY,UAAQ,EAACzC,MAAM,GAAvB,kCACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,2BAIN,qBAAK6B,UAAU,uBAAf,SACE,sBAAKA,UAAU,cAAf,UACE,sBAAMA,UAAU,sCAAsCS,GAAG,4BAAzD,wBACA,yBAAQC,eAAgBpB,EAAQD,SAAUnB,KAAK,WAAWC,MAAOmB,EAAQD,SAAUsB,SAAUjB,GAAcM,UAAU,cAArH,UACE,wBAAQY,UAAQ,EAACzC,MAAM,GAAvB,iCACClB,EAAW4D,KAAI,SAAAC,GAAc,OAC5B,wBAAQ3C,MAAO2C,EAAeL,GAA9B,SAA2DK,EAAenD,OAAnCmD,EAAeL,eAK9D,sBAAKT,UAAU,0CAAf,UACGR,GAASuB,OAAS,GAAK,eAACnB,EAAA,EAAOoB,OAAR,CAAelB,QAAS,CAAEmB,GAAI,IAAMjB,UAAU,kBAAkBQ,QA3D7E,SAAAxC,GACnBuB,GAAW,CAAE3B,OAAQ,GAAIyB,SAAU,KACnCI,GAAY,KAyDoB,cAAyF,mBAAGO,UAAU,iBAAtG,4BACxB,yBAAQA,UAAU,eAAeQ,QAlFrB,SAAAxC,GACpB,GAA6C,MAAxCsB,EAAQD,UAAYC,EAAQ1B,QAAgB,CAE/C,IAAMsD,EAAejE,EAAWkE,QAAO,SAAA9B,GAAQ,OAAIA,EAASoB,IAAMnB,EAAQD,UAAYA,EAASzB,QAAU0B,EAAQ1B,UAE7GsD,EAAaH,OAAS,GACxBtB,GAAYyB,QAGT,GAAyB,KAArB5B,EAAQD,SAAiB,CAElC,IAAM+B,EAAqBnE,EAAWkE,QAAO,SAAA9B,GAAQ,OAAIA,EAASoB,IAAMnB,EAAQD,YAChFI,GAAY2B,QAGT,GAAuB,KAAnB9B,EAAQ1B,OAAe,CAE9B,IAAMyD,EAAiBpE,EAAWkE,QAAO,SAAA9B,GAAQ,OAAIA,EAASzB,QAAU0B,EAAQ1B,UAChF6B,GAAY4B,KAgEN,cAA2D,mBAAGrB,UAAU,kBAAxE,6BAIJ,oBAAIA,UAAU,OAAd,yBACA,qBAAKA,UAAU,WAAf,UACIR,GAASuB,OAAS,EAAIvB,GAAWvC,GAAY4D,KAAI,SAAAS,GAAS,OAC1D,qBAAwBtB,UAAU,2CAAlC,SACE,sBAAKA,UAAU,iBAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,sBAAKA,UAAU,yBAAf,UACE,qBAAKA,UAAU,QAAf,SACE,oBAAIA,UAAU,iBAAd,SACGsB,EAAU3D,UAGf,qBAAKqC,UAAU,iBAAf,SACE,qBAAKA,UAAU,2BAAf,SACGsB,EAAU1D,gBAKnB,oBAAIoC,UAAU,8BAAd,SACG1B,EAAUuC,KAAI,SAAAU,GAAQ,OACrBA,EAAS3C,cAAgB0C,EAAUb,IACjC,oBAAIT,UAAU,kBAAd,SACE,sBAAKA,UAAU,gDAAf,UACE,sBAAKA,UAAU,QAAf,UACE,mBAAGA,UAAU,oCACb,uBAAMA,UAAU,uBAAhB,cAAyCuB,EAASzC,YAAlD,OAFF,OAE6EyC,EAAS1C,eAEtF,qBAAKmB,UAAU,iBAAf,SACE,sBAAKA,UAAU,iBAAf,UAAgC,mBAAGA,UAAU,oBAA7C,SAA4EC,GAAWsB,EAASxC,cAAhG,aAP+BwC,EAASd,aAnB9Ca,EAAUb,SAuCxB,eAACe,EAAA,EAAD,CAAOC,KAAMhD,EAAgBiD,OAAQ/C,EAArC,UACE,qBAAKqB,UAAU,0BAAf,SACE,qBAAIA,UAAU,yBAAyBS,GAAG,oBAA1C,cAA+D,mBAAGT,UAAU,2BAA5E,8BAEF,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,OAAf,UACE,uBAAO2B,QAAQ,gBAAf,kCACA,yBAAQjB,eAAgB1B,EAAUJ,YAAaV,KAAK,cAAcC,MAAOa,EAAUJ,YACjF+B,SAAUzB,EAAiBc,UAAU,cADvC,UAEE,wBAAQY,UAAQ,EAACzC,MAAM,GAAvB,iCACClB,EAAW4D,KAAI,SAAAe,GAAgB,OAC9B,yBAAQzD,MAAOyD,EAAiBnB,GAAhC,UAA+DmB,EAAiBjE,MAAhF,MAA0FiE,EAAiBhE,OAA3G,MAAyCgE,EAAiBnB,aAIhE,sBAAKT,UAAU,OAAf,UACE,uBAAO2B,QAAQ,YAAf,wCACA,uBAAOpB,KAAK,OAAOrC,KAAK,cAAcuC,GAAG,YAAYtC,MAAOa,EAAUH,YAAa8B,SAAUzB,EAC3F2C,YAAY,uCAAuC7B,UAAU,oBAEjE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,OAAf,UACE,uBAAO2B,QAAQ,aAAf,8BACA,cAAC,IAAD,CACE3B,UAAU,eAAe8B,OAAO,KAAKC,iBAAiB,IAAIC,kBAAkB,IAAIH,YAAY,UAC5F1D,MAAOa,EAAUF,YAAamD,cA7LvB,SAACjE,EAAOkE,EAAaC,GAC5ClD,EAAa,2BAAKD,GAAN,IAAiBF,YAAaqD,aAgMhC,qBAAKnC,UAAU,QAAf,SACE,sBAAKA,UAAU,OAAf,UACE,uBAAO2B,QAAQ,YAAf,6BACA,uBAAOpB,KAAK,OAAOrC,KAAK,eAAeuC,GAAG,YACxCoB,YAAY,uCAAuC7B,UAAU,eAAe7B,MAAOa,EAAUD,aAAc4B,SAAUzB,YAI5HC,GAAyBQ,QAE5B,sBAAKK,UAAU,eAAf,UACE,wBAAQO,KAAK,SAASP,UAAU,2BAA2BQ,QAAS7B,EAApE,qBACA,yBAAQ4B,KAAK,SAASP,UAAU,kBAAkBQ,QArMtC,WACiD,MAAhExB,EAAUH,aAAeG,EAAUb,OAASa,EAAUkB,OACzDd,GAAyB,GACzBgD,YAAW,WACThD,GAAyB,KACxB,MAEHzC,EAAI0F,KAAK,WAAYrD,GAAWsD,MAAK,SAAAC,GACnCA,EAASC,QAAU,KAAOhE,QA6LtB,cAA2E,mBAAGwB,UAAU,gBAAxF,6BAIJ,eAACwB,EAAA,EAAD,CAAOC,KAAMjE,EAAmBkE,OAAQhE,EAAxC,UACE,qBAAKsC,UAAU,0BAAf,SACE,qBAAIA,UAAU,yBAAyBS,GAAG,oBAA1C,cAA+D,mBAAGT,UAAU,kBAA5E,iCAEF,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,OAAf,UACE,uBAAO2B,QAAQ,gBAAf,sCACA,uBAAOpB,KAAK,OAAOrC,KAAK,QAAQuC,GAAG,gBACjCoB,YAAY,uCAAuC7B,UAAU,eAAe7B,MAAON,EAAaF,MAAOgD,SAAU5C,OAErH,sBAAKiC,UAAU,OAAf,UACE,uBAAO2B,QAAQ,iBAAf,mCACA,yBAAQjB,eAAe,GAAGxC,KAAK,SAASC,MAAON,EAAaD,OAAQ+C,SAAU5C,EAAoBiC,UAAU,cAA5G,UACE,wBAAQY,UAAQ,EAACzC,MAAM,GAAvB,kCACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,QAAd,yBAGHC,GAA4BuB,QAE/B,sBAAKK,UAAU,eAAf,UACE,wBAAQO,KAAK,SAASP,UAAU,2BAA2BQ,QAAS9C,EAApE,oBACA,yBAAQ6C,KAAK,SAASP,UAAU,kBAAkBQ,QAlRnC,WAC6B,MAA/C3C,EAAaF,OAASE,EAAaD,SACtCS,GAA4B,GAC5B+D,YAAW,WACT/D,GAA4B,KAC3B,MAEH1B,EAAI0F,KAAK,cAAexE,GAAcyE,MAAK,SAAAC,GACzCA,EAASC,QAAU,KAAOrF,QA0QtB,cAA+E,mBAAG6C,UAAU,gBAA5F,wCC3SGyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBL,MAAK,YAAkD,IAA/CM,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.70ba0ab5.chunk.js","sourcesContent":["import axios from 'axios';\nimport url from './url';\n\nconst api = axios.create({\n    baseURL: url.base_api,\n})\n\nexport default api;","export default {\n    base_api: \"http://laranotes-back.2dmedia.com.br/api/\",\n}\n","\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport api from \"./services/api\";\nimport { Modal } from \"react-bootstrap\";\nimport { motion } from \"framer-motion\";\nimport CurrencyInput from 'react-currency-input';\n\nfunction App() {\n\n  // ALL STATES, FUNCTIONS AND METHODS OF CATEGORIES\n\n  const [categories, setCategories] = useState([]);\n\n  async function fetchCategories() {\n    const { data } = await api.get(`categories`);\n    setCategories(data)\n  }\n\n  useEffect(() => {\n    fetchCategories();\n  }, []);\n\n\n  const [showModalCategory, setShowModalCategory] = useState(false);\n  const handleModalCategory = () => setShowModalCategory(!showModalCategory);\n\n  const [formCategory, setFormCategory] = useState({\n    title: '',\n    period: ''\n  });\n  const handleFormCategory = event => setFormCategory({ ...formCategory, [event.target.name]: event.target.value });\n\n\n  const [showAlertWarningCategory, setShowAlertWarningCategory] = useState(false);\n\n\n  const sendFormCategory = () => {\n    if ((formCategory.title && formCategory.period) === '') {\n      setShowAlertWarningCategory(true)\n      setTimeout(() => {\n        setShowAlertWarningCategory(false)\n      }, 5000);\n    } else {\n      api.post('categories/', formCategory).then(response => {\n        response.status >= 200 && fetchCategories()\n      })\n    }\n  }\n\n  // ALL STATES, FUNCTIONS AND METHODS OF SPENDINGS\n\n\n  const [spendings, setSpendings] = useState([]);\n\n\n  async function fetchSpending() {\n    const { data } = await api.get(`spending`);\n    setSpendings(data)\n  }\n  useEffect(() => {\n    fetchSpending();\n  }, []);\n\n\n  const [showModalSpend, setShowModalSpend] = useState(false);\n  const handleModalSpend = () => setShowModalSpend(!showModalSpend);\n\n\n  const [formSpend, setFormSpend] = useState({\n    category_fk: '',\n    description: '',\n    total_spent: '',\n    closing_date: '',\n  });\n\n\n  const handleFormSpend = event => setFormSpend({ ...formSpend, [event.target.name]: event.target.value });\n  const handleSpendValue = (event, maskedvalue, floatvalue) => {\n    setFormSpend({ ...formSpend, total_spent: floatvalue })\n  }\n\n\n  const [showAlertWarningSpend, setShowAlertWarningSpend] = useState(false);\n\n\n  const sendFormSpend = () => {\n    if ((formSpend.description && formSpend.value && formSpend.date) === '') {\n      setShowAlertWarningSpend(true)\n      setTimeout(() => {\n        setShowAlertWarningSpend(false)\n      }, 5000);\n    } else {\n      api.post('spending', formSpend).then(response => {\n        response.status >= 200 && fetchSpending()\n      })\n    }\n  }\n\n\n  // FILTERS \n\n  const [filters, setFilters] = useState({\n    period: '',\n    category: '',\n  })\n\n  const [filtered, setFiltered] = useState([]);\n\n  const handleFilter = event => {\n    setFilters({ ...filters, [event.target.name]: event.target.value })\n  }\n\n  const searchFilters = event => {\n    if ((filters.category && filters.period) !== '') {\n\n      const filteredFull = categories.filter(category => category.id == filters.category && category.period == filters.period)\n\n      if (filteredFull.length > 0) {\n        setFiltered(filteredFull)\n      }\n\n    } else if (filters.category !== '') {\n\n      const filteredCategories = categories.filter(category => category.id == filters.category)\n      setFiltered(filteredCategories)\n\n    }\n    else if (filters.period !== '') {\n\n      const filteredPeriod = categories.filter(category => category.period == filters.period)\n      setFiltered(filteredPeriod)\n    }\n  }\n\n  const clearFilters = event => {\n    setFilters({ period: '', category: '', })\n    setFiltered([])\n  }\n\n  // SECONDARIES FUNCTIONS\n\n  const alertWarning = () => {\n    return <motion.div animate={{ y: 10 }} className='alert alert-warning'> <i className='fas fa-exclamation-triangle'></i>  Preencha todos os campos  </motion.div>\n  }\n\n  const formatDate = value => {\n    let date = new Date(value);\n    let dateFormated = ((date.getDate())) + \"/\" + ((date.getMonth() + 1)) + \"/\" + date.getFullYear();\n    return dateFormated;\n  }\n\n\n  return (\n    <div>\n      <nav className=\"navbar navbar-dark bg-dark\">\n        <div className=\"container\">\n          <span className=\"navbar-brand mb-0 h1\"> <i className='fas fa-address-book'></i> LaraNotes</span>\n        </div>\n      </nav>\n      <div className=\"container my-5\">\n        <div className=\"row justify-content-center\">\n          <div className='col-12 col-lg-4 mb-4 text-center'>\n            <div className=\"btn-group\" >\n              <button type=\"button\" onClick={handleModalSpend} className=\"btn btn-success\"><i className='fas fa-money-check-alt'></i> &nbsp; Adicionar Gastos</button>\n              <button type=\"button\" onClick={handleModalCategory} className=\"btn btn-primary\"><i className='fas fa-wallet'></i> &nbsp; Criar Categorias</button>\n            </div>\n          </div>\n        </div>\n        <div className='row'>\n          <div className='col-12 col-lg-4 mb-3'>\n            <div className=\"input-group\">\n              <span className=\"input-group-text text-white bg-dark\" id=\"inputGroup-sizing-default\">Filtrar por</span>\n              <select defaultChecked='' name='period' value={filters.period} onChange={handleFilter} className='form-select'>\n                <option selected value='' >Escolha a período</option>\n                <option value='Diário'>Diário</option>\n                <option value='Semanal'>Semanal</option>\n                <option value='Mensal'>Mensal</option>\n                <option value='Anual'>Anual</option>\n              </select>\n            </div>\n          </div>\n          <div className='col-12 col-lg-4 mb-3'>\n            <div className=\"input-group\">\n              <span className=\"input-group-text text-white bg-dark\" id=\"inputGroup-sizing-default\">Gastos com</span>\n              <select defaultChecked={filters.category} name='category' value={filters.category} onChange={handleFilter} className='form-select'>\n                <option selected value='' >Escolha a categoria</option>\n                {categories.map(categorySelect => (\n                  <option value={categorySelect.id} key={categorySelect.id}>{categorySelect.title}</option>\n                ))}\n              </select>\n            </div>\n          </div>\n          <div className='col-12 col-lg-4 text-center text-lg-end'>\n            {filtered.length > 0 && <motion.button animate={{ x: -20 }} className=\"btn btn-warning\" onClick={clearFilters} > <i className='fas fa-trash'></i> &nbsp; Limpar Filtros  </motion.button>}\n            <button className=\"btn btn-info\" onClick={searchFilters} > <i className='fas fa-search'></i> &nbsp; Pesquisar  </button>\n          </div>\n        </div>\n\n        <h3 className='mt-3'>Meus Gastos</h3>\n        <div className=\"row my-3\">\n          {(filtered.length > 0 ? filtered : categories).map(categorie => (\n            <div key={categorie.id} className='col-12 col-sm-12 col-md-6 col-lg-4  mb-4'>\n              <div className='card shadow-sm'>\n                <div className=\"card-header bg-dark\">\n                  <div className='row align-items-center'>\n                    <div className='col-8'>\n                      <h5 className='m-0 text-white'>\n                        {categorie.title}\n                      </h5>\n                    </div>\n                    <div className='col-4 text-end'>\n                      <div className='badge text-dark bg-light'>\n                        {categorie.period}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <ul className=\"list-group list-group-flush\">\n                  {spendings.map(spending => (\n                    spending.category_fk === categorie.id && (\n                      <li className=\"list-group-item\" key={spending.id}>\n                        <div className=\"row justify-content-center align-items-center\">\n                          <div className=\"col-8\">\n                            <i className='fas fa-dollar-sign text-success'></i>\n                            <span className='text-success fw-bold'> {spending.total_spent} </span> -  {spending.description}\n                          </div>\n                          <div className=\"col-4 text-end\">\n                            <div className=\"badge bg-dark \"><i className=\"far fa-calendar\"></i> &nbsp; {formatDate(spending.closing_date)} </div>\n                          </div>\n                        </div>\n                      </li>\n                    )\n                  ))}\n                </ul>\n              </div>\n            </div>\n          ))}\n        </div>\n\n\n        <Modal show={showModalSpend} onHide={handleModalSpend}>\n          <div className=\"modal-header bg-success\">\n            <h5 className=\"modal-title text-white\" id=\"exampleModalLabel\"> <i className='fas fa-money-check-alt'></i> &nbsp; Adicionar Gastos</h5>\n          </div>\n          <div className=\"modal-body\">\n            <div className=\"mb-3\">\n              <label htmlFor=\"spendCategory\"> Categoria do Gasto </label>\n              <select defaultChecked={formSpend.category_fk} name='category_fk' value={formSpend.category_fk}\n                onChange={handleFormSpend} className='form-select'>\n                <option selected value='' >Escolha a categoria</option>\n                {categories.map(categorySelectFK => (\n                  <option value={categorySelectFK.id} key={categorySelectFK.id}>{categorySelectFK.title} - {categorySelectFK.period} </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"spendDesc\"> Descrição do Gasto </label>\n              <input type=\"text\" name=\"description\" id=\"spendDesc\" value={formSpend.description} onChange={handleFormSpend}\n                placeholder=\"Ex: Bolsa Presente, Hidratante, etc.\" className=\"form-control\" />\n            </div>\n            <div className=\"row\">\n              <div className=\"col-6\">\n                <div className=\"mb-3\">\n                  <label htmlFor=\"spendValue\"> Valor do Gasto </label>\n                  <CurrencyInput\n                    className=\"form-control\" prefix=\"R$\" decimalSeparator=\",\" thousandSeparator=\".\" placeholder=\"R$xx,xx\"\n                    value={formSpend.total_spent} onChangeEvent={handleSpendValue}\n                  />\n                </div>\n              </div>\n              <div className=\"col-6\">\n                <div className=\"mb-3\">\n                  <label htmlFor=\"spendDate\"> Data do Gasto </label>\n                  <input type=\"date\" name=\"closing_date\" id=\"spendDate\"\n                    placeholder=\"Ex: Bolsa Presente, Hidratante, etc.\" className=\"form-control\" value={formSpend.closing_date} onChange={handleFormSpend} />\n                </div>\n              </div>\n            </div>\n            {showAlertWarningSpend && alertWarning()}\n          </div>\n          <div className=\"modal-footer\">\n            <button type=\"button\" className=\"btn btn-link text-danger\" onClick={handleModalSpend}> Fechar</button>\n            <button type=\"button\" className=\"btn btn-success\" onClick={sendFormSpend}> <i className='fas fa-plus'></i>  Cadastrar Gasto</button>\n          </div>\n        </Modal>\n\n        <Modal show={showModalCategory} onHide={handleModalCategory}>\n          <div className=\"modal-header bg-primary\">\n            <h5 className=\"modal-title text-white\" id=\"exampleModalLabel\"> <i className='fas fa-wallet'></i> &nbsp; Adicionar Categoria</h5>\n          </div>\n          <div className=\"modal-body\">\n            <div className=\"mb-3\">\n              <label htmlFor=\"categoryTitle\"> Título da Categoria </label>\n              <input type=\"text\" name=\"title\" id=\"categoryTitle\"\n                placeholder=\"Ex: Bolsa Presente, Hidratante, etc.\" className=\"form-control\" value={formCategory.title} onChange={handleFormCategory} />\n            </div>\n            <div className=\"mb-3\">\n              <label htmlFor=\"categoryPeriod\"> Período do Gasto </label>\n              <select defaultChecked='' name='period' value={formCategory.period} onChange={handleFormCategory} className='form-select'>\n                <option selected value='' >Escolha o período</option>\n                <option value='Diário'>Diário</option>\n                <option value='Semanal'>Semanal</option>\n                <option value='Mensal'>Mensal</option>\n                <option value='Anual'>Anual</option>\n              </select>\n            </div>\n            {showAlertWarningCategory && alertWarning()}\n          </div>\n          <div className=\"modal-footer\">\n            <button type=\"button\" className=\"btn btn-link text-danger\" onClick={handleModalCategory} >Fechar</button>\n            <button type=\"button\" className=\"btn btn-primary\" onClick={sendFormCategory} > <i className='fas fa-plus'></i>  Cadastrar Categoria</button>\n          </div>\n        </Modal>\n\n      </div>\n\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\nimport './assets/css/bootstrap.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}